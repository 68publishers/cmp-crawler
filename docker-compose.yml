version: "3.7"

services:
    app:
        build:
            context: .
            target: dev
        volumes:
            - .:/app
            - /app/node_modules
        container_name: crawler-app
        restart: always
        ports:
            - "3000:3000"
        environment:
            APP_URL: http://localhost:3000
            DB_URL: postgres://root:root@db:5432/crawler
            REDIS_HOST: redis
            REDIS_PORT: 6379
            REDIS_AUTH: redis_pass
        security_opt:
            - seccomp=./.docker/chrome/chrome.json
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_started
        networks:
            - backend

    db:
        image: postgres:14.6
        container_name: crawler-db
        ports:
            - "5432:5432"
        volumes:
            - ./.docker/postgres/postgres.conf:/etc/postgresql/postgresql.conf:delegated
            - ./var/postgres-data:/var/lib/postgresql/data:cached
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=crawler
        command:
            - postgres
            - -c
            - "config_file=/etc/postgresql/postgresql.conf"
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - backend

    redis:
        image: redis:7.0.10-alpine
        container_name: crawler-redis
        command: redis-server --loglevel warning --requirepass redis_pass --maxmemory-policy noeviction --appendonly yes
        ports:
            - "6379:6379"
        networks:
            - backend

networks:
    backend:
